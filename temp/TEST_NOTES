[*] asset.hpp
    dependencies
    ************
    "serialize.hpp"
    "print.hpp"
    "system.hpp"
    "symbol.hpp"
    <tuple>
    <limits>
    ************
    namespace eosio
    ---------------
    [*] asset
    - constructors
      [*] asset()
      [*] asset(uint64_t, class symbol s)
    - methods
      [*] bool is_amount_within_range()
      [*] bool is_valid()
      [*] void set_amount(int64_t)
      [*] std::string to_string()
      [*] void print()
      [*] operator-
      [*] operator-=
      [*] operator+=
      [*] operator*=
      [*] operator/=
      [*] friend operator-
      [*] friend operator+
      [*] friend operator*
      [*] friend operator*
      [*] friend operator/
      [*] friend operator/
      [*] friend operator==
      [*] friend operator!=
      [*] friend operator<
      [*] friend operator<=
      [*] friend operator>
      [*] friend operator>=
    - members
      [*] uint64_t amount
      [*] symbol symbol
      [*] int64_t max_amount
    [*] extended_asset
    - constructors
      [*] extended_asset()
      [*] extended_asset(int64_t, extended_symbol)
      [*] extended_asset(asset, name)
    - methods
      [*] extended_symbol get_extended_symbol()
      [*] void print()
      [*] operator-
      [*] friend operator-
      [*] friend operator+
      [*] friend operator+=
      [*] friend operator-=
      [*] friend operator<
      [*] friend operator==
      [*] friend operator!=
      [*] friend operator<=
      [*] friend operator>=
    - members
      [*] asset quantity
      [*] name contract
    ---------------
[*] binary_extension.hpp
[*] datastream.hpp
[*] eosio.hpp
[*] fixed_bytes.hpp
[*] name.hpp
    dependencies
    ************
    "system.hpp"
    "serialize.hpp"
    <string>
    <string_view>
    ************
    namespace eosio
    ---------------
    [*] name
    - constructors
      [✓] name()
      [✓] name(uint64_t)
      [✓] name(name::raw)
      [✓] name(std::string_view)
    - methods
      [✓] uint8_t char_to_value(char)
      [✓] uint8_t length()
      [*] name suffix()
      [*] operator raw()
      [*] operator bool()
      [*] char* write_as_string(char*, char*)
      [*] std::string to_string()
      [*] friend operator==
      [*] friend operator!=
      [*] friend operator<
    - members
      [*] uint64_t value
    namespace detail
    ----------------
    [*] to_const_char_arr
    - members
      [*] char value[]
    ----------------
    ----------------
    [*] eosio::name operator"" _n
[*] print.hpp
[*] public_key.hpp
[*] serialize.hpp
[*] symbol.hpp
    dependencies
    ************
    "system.hpp"
    "print.h"
    "name.hpp"
    "serialize.hpp"
    <tuple>
    <limits>
    <string_view>
    ************
    namespace eosio
    ---------------
    [*] symbol_code
    - constructors
      [*] symbol_code()
      [*] symbol_code(uint64_t)
      [*] symbol_code(std::string_view)
    - methods
      [*] bool is_valid()
      [*] uint32_t length()
      [*] uint64_t raw()
      [*] operator bool()
      [*] char* write_as_string(char*, char*)
      [*] std::string to_string()
      [*] friend operator==
      [*] friend operator!=
      [*] friend operator<
    - members
      [*] uint64_t value
    [*] symbol
    - constructors
      [*] symbol()
      [*] symbol(uint64_t)
      [*] symbol(symbol_code, uint8_t)
      [*] symbol(string_view, uint8_t)
    - methods
      [*] bool is_valid()
      [*] uint8_t precision()
      [*] symbol_code code()
      [*] uint64_t raw()
      [*] operator bool()
      [*] void print(bool show_precision)
      [*] friend operator==
      [*] friend operator!=
      [*] friend operator<
    - members
      [*] uint64_t value
    [*] extended_symbol
    - constructors
      [*] extended_symbol()
      [*] extended_symbol(symbol, name)
    - methods
      [*] symbol get_symbol()
      [*] name get_contract()
      [*] void print(bool show_precision)
      [*] friend operator==
      [*] friend operator!=
      [*] friend operator<
    - members
      [*] symbol symbol
      [*] name contract
    ---------------  
[*] system.hpp
[*] time.hpp
[*] varint.hpp
