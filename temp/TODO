[✓] asset.hpp
    dependencies
    ************
    "serialize.hpp"
    "print.hpp"
    "system.hpp"
    "symbol.hpp"
    <tuple>
    <limits>
    ************
    namespace eosio
    ---------------
    
    [✓] asset
    - constructors
      [✓] asset()
      [✓] asset(uint64_t, class symbol s)
    - methods
      [✓] bool is_amount_within_range()
      [✓] bool is_valid()
      [✓] void set_amount(int64_t)
      [✓] std::string to_string()
      [✓] void print()
      [✓] operator-
      [✓] operator-=
      [✓] operator+=
      [✓] operator*=
      [✓] operator/=
      [✓] friend operator-
      [✓] friend operator+
      [✓] friend operator*
      [✓] friend operator*
      [✓] friend operator/
      [✓] friend operator/
      [✓] friend operator==
      [✓] friend operator!=
      [✓] friend operator<
      [✓] friend operator<=
      [✓] friend operator>
      [✓] friend operator>=
    - members
      [✓] uint64_t amount
      [✓] symbol symbol
      [✓] int64_t max_amount
      
    [✓] extended_asset
    - constructors
      [✓] extended_asset()
      [✓] extended_asset(int64_t, extended_symbol)
      [✓] extended_asset(asset, name)
    - methods
      [✓] extended_symbol get_extended_symbol()
      [✓] void print()
      [✓] operator-
      [✓] friend operator-
      [✓] friend operator+
      [✓] friend operator+=
      [✓] friend operator-=
      [✓] friend operator<
      [✓] friend operator==
      [✓] friend operator!=
      [✓] friend operator<=
      [✓] friend operator>=
    - members
      [✓] asset quantity
      [✓] name contract
    ---------------
    
[*] binary_extension.hpp
[*] datastream.hpp

[✓] eosio.hpp
    dependencies
    ************
    "action.hpp"
    "print.hpp"
    "multi_index.hpp"
    "dispatcher.hpp"
    "contract.hpp"
    ************
    namespace eosio
    ---------------
    - macros
      [✓] #define CONTRACT
      [✓] #define ACTION
      [✓] #define TABLE
    ---------------

[*] fixed_bytes.hpp

[✓] name.hpp
    dependencies
    ************
    "system.hpp"
    "serialize.hpp"
    <string>
    <string_view>
    ************
    namespace eosio
    ---------------
    
    [✓] name
    - constructors
      [✓] name()
      [✓] name(uint64_t)
      [✓] name(name::raw)
      [✓] name(std::string_view)
    - methods
      [✓] uint8_t char_to_value(char)
      [✓] uint8_t length()
      [✓] name suffix()
      [✓] operator raw()
      [✓] operator bool()
      [✓] char* write_as_string(char*, char*)
      [✓] std::string to_string()
      [✓] friend operator==
      [✓] friend operator!=
      [✓] friend operator<
    - members
      [✓] uint64_t value
    namespace detail
    ----------------
    [✓] to_const_char_arr
    - members
      [✓] char value[]
    ----------------
    ----------------
    [✓] eosio::name operator"" _n
    
[*] print.hpp
[*] public_key.hpp
[*] serialize.hpp

[✓] symbol.hpp
    dependencies
    ************
    "system.hpp"
    "print.h"
    "name.hpp"
    "serialize.hpp"
    <tuple>
    <limits>
    <string_view>
    ************
    namespace eosio
    ---------------
    
    [✓] symbol_code
    - constructors
      [✓] symbol_code()
      [✓] symbol_code(uint64_t)
      [✓] symbol_code(std::string_view)
    - methods
      [✓] bool is_valid()
      [✓] uint32_t length()
      [✓] uint64_t raw()
      [✓] operator bool()
      [✓] char* write_as_string(char*, char*)
      [✓] std::string to_string()
      [✓] friend operator==
      [✓] friend operator!=
      [✓] friend operator<
    - members
      [✓] uint64_t value
      
    [✓] symbol
    - constructors
      [✓] symbol()
      [✓] symbol(uint64_t)
      [✓] symbol(symbol_code, uint8_t)
      [✓] symbol(string_view, uint8_t)
    - methods
      [✓] bool is_valid()
      [✓] uint8_t precision()
      [✓] symbol_code code()
      [✓] uint64_t raw()
      [✓] operator bool()
      [✓] void print(bool show_precision)
      [✓] friend operator==
      [✓] friend operator!=
      [✓] friend operator<
    - members
      [✓] uint64_t value
      
    [✓] extended_symbol
    - constructors
      [✓] extended_symbol()
      [✓] extended_symbol(symbol, name)
    - methods
      [✓] symbol get_symbol()
      [✓] name get_contract()
      [✓] void print(bool show_precision)
      [✓] friend operator==
      [✓] friend operator!=
      [✓] friend operator<
    - members
      [✓] symbol symbol
      [✓] name contract
    ---------------
    
[✓] system.hpp
    dependencies
    ************
    "system.h"
    <string>
    ************
    namespace eosio
    ---------------
    - methods
      [✓] inline void check(bool pred, const char* msg)
      [✓] inline void check(bool pred, const std::string& msg)
      [✓] inline void check(bool pred, const std::string&& msg)
      [✓] inline void check(bool pred, const char* msg, size_t n)
      [✓] inline void check(bool pred, const std::string& msg, size_t n)
      [✓] inline void check(bool pred, uint64_t code)
    ---------------

[✓] time.hpp
    dependencies
    ************
    "eosio.hpp"
    <stdint.h>
    <string>
    ************
    namespace eosio
    ---------------
    [✓] microseconds
    - constructors
      [✓] microseconds(uint64_t)
    - methods
      [✓] static microseconds maximum()
      [✓] friend microseconds operator+(const  microseconds&, const microseconds&)
      [✓] friend microseconds operator-(const  microseconds&, const microseconds&)
      [✓] bool operator==(const  microseconds&)
      [✓] bool operator!=(const  microseconds&)
      [✓] friend bool operator>(const  microseconds&, const microseconds&)
      [✓] friend bool operator>=(const  microseconds&, const microseconds&)
      [✓] friend bool operator<(const  microseconds&, const microseconds&)
      [✓] friend bool operator<=(const  microseconds&, const microseconds&)
      [✓] microseconds& operator+=(const  microseconds&)
      [✓] microseconds& operator-=(const  microseconds&)
      [✓] int64_t count()
      [✓] int64_t to_seconds()
    - members
      [✓] count
      
    [✓] inline microseconds seconds(uint64_t)
    [✓] inline microseconds milliseconds(uint64_t)
    [✓] inline microseconds minutes(uint64_t)
    [✓] inline microseconds hours(uint64_t)
    [✓] inline microseconds days(uint64_t)

    [✓] time_point
    - constructors
      [✓] explicit time_point(microseconds)
    - methods
      [✓] const microseconds& time_since_epoch()const
      [✓] uint32_t sec_since_epoch()const
      [✓] bool operator>(const time_point&)
      [✓] bool operator>=(const time_point&)
      [✓] bool operator<(const time_point&)
      [✓] bool operator<=(const time_point&)
      [✓] bool operator==(const time_point&)
      [✓] bool operator!=(const time_point&)
      [✓] time_point& operator+=(const microseconds&)
      [✓] time_point& operator-=(const microseconds&)
      [✓] time_point operator+(const microseconds&)
      [✓] time_point operator+(const time_point&)
      [✓] time_point operator-(const microseconds&)
      [✓] time_point operator-(const time_point&)
    - members
      [✓] microseconds elapsed

    [✓] time_point_sec
    - constructors
      [✓] time_point_sec()
      [✓] explicit time_point_sec(uint32_t)
      [✓] time_point_sec(const time_point&)
    - methods
      [✓] static time_point_sec maximum()
      [✓] static time_point_sec min()
      [✓] operator time_point()const
      [✓] uint32_t sec_since_epoch()const
      [✓] time_point_sec operator=(const eosio::time_point&)
      [✓] friend bool operator<(const time_point_sec&, const time_point_sec&)
      [✓] friend bool operator>(const time_point_sec&, const time_point_sec&)
      [✓] friend bool operator<=(const time_point_sec&, const time_point_sec&)
      [✓] friend bool operator>=(const time_point_sec&, const time_point_sec&)
      [✓] friend bool operator==(const time_point_sec&, const time_point_sec&)
      [✓] friend bool operator!=(const time_point_sec&, const time_point_sec&)
      [✓] time_point_sec& operator+=(uint32_t)
      [✓] time_point_sec& operator+=(microseconds)
      [✓] time_point_sec& operator+=(time_point_sec)
      [✓] time_point_sec& operator-=(uint32_t)
      [✓] time_point_sec& operator-=(microseconds)
      [✓] time_point_sec& operator-=(time_point_sec)
      [✓] friend bool operator+(uint32_t)
      [✓] friend bool operator-(uint32_t)
      [✓] friend time_point operator+(const time_point_sec&, const microseconds&)
      [✓] friend time_point operator-(const time_point_sec&, const microseconds&)
      [✓] friend time_point operator-(const time_point_sec&, const microseconds&)
      [✓] friend time_point operator-(const time_point_sec&, const time_point_sec&)
    - members
      [✓] uint32_t utc_seconds

    [✓] block_timestamp
    - constructors
      [✓] explicit block_timestamp(uint32_t)
      [✓] block_timestamp(const time_point&)
      [✓] block_timestamp(const time_point_sec&)
    - methods
      [✓] static block_timestamp maximum()
      [✓] static block_timestamp min()
      [✓] block_timestamp next()const
      [✓] time_point to_time_point()const
      [✓] operator time_point()const
      [✓] void operator=(const time_point&)
      [✓] bool operator>(const block_timestamp&)
      [✓] bool operator>=(const block_timestamp&)
      [✓] bool operator<(const block_timestamp&)
      [✓] bool operator<=(const block_timestamp&)
      [✓] bool operator==(const block_timestamp&)
      [✓] bool operator!=(const block_timestamp&)
      [✓] void set_time_point(const time_point&)
      [✓] void set_time_point(const time_point_sec&)
    - members
      [✓] static constexpr int32_t block_interval_ms
      [✓] static constexpr int32_t block_timestamp_epoch
      [✓] uint32_t slot
    ---------------  
[*] varint.hpp
