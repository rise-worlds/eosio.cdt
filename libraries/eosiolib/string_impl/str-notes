[✔][✔] template <size_t N>
constexpr eostring(const char (&str)[N]);

[✔][✔] basic_string();

[✔][✔] eostring( size_t count, char ch );

[✔][✔] eostring( const eostring& other, size_t pos, size_t count = std::eostring::npos );

[✔][✔] eostring( const char* s, size_t count );

[✔][✔] eostring( const eostring& other );

[✔][✔] eostring( eostring&& other );

--------------------------------------------------------------------------------

[✔][✔] eostring& operator=( const eostring& str );

[✔][✔] eostring& operator=( eostring&& str );

[✔][✔] eostring& operator=( const char* s );

--------------------------------------------------------------------------------

[✔][✔] reference       at( size_t pos );

[✔][✔] const_reference at( size_t pos ) const;

--------------------------------------------------------------------------------

[✔][✔] reference       operator[]( size_t pos );

[✔][✔] const_reference operator[]( size_t pos ) const;

--------------------------------------------------------------------------------

[✔][✔] char& front();

[✔][✔] const char& front() const;

--------------------------------------------------------------------------------

[✔][✔] char& back();

[✔][✔] const char& back() const;

--------------------------------------------------------------------------------

[✔][✔] char* data();

[✔][✔] const char* data() const;

--------------------------------------------------------------------------------

[✔][✔] const char* c_str() const;

--------------------------------------------------------------------------------

[✔][✔] iterator begin();

[✔][✔] const_iterator cbegin() const;

--------------------------------------------------------------------------------

[✔][✔] iterator end();

[✔][✔] const_iterator cend() const;

--------------------------------------------------------------------------------

[✔][✔] bool empty() const;

--------------------------------------------------------------------------------

[✔][✔] size_t size() const;

[✔][✔] size_t length() const;

--------------------------------------------------------------------------------

[✔][✔] size_t max_size() const;

--------------------------------------------------------------------------------

[✔][✔] void reserve( size_t new_cap);

--------------------------------------------------------------------------------

[✔][✔] size_t capacity() const;

--------------------------------------------------------------------------------

[✔][✔] void shrink_to_fit();

--------------------------------------------------------------------------------

[✔][✔] void clear();

--------------------------------------------------------------------------------

[✔][✔] eostring& insert( size_t index, const char* s );

[✔][✔] eostring& insert( size_t index, const eostring& str );

--------------------------------------------------------------------------------

[✔][✔] eostring& erase( size_t index = 0, size_t count = npos );

--------------------------------------------------------------------------------

[✔][✔] void push_back( char ch );

--------------------------------------------------------------------------------

[✔][✔] void pop_back();

--------------------------------------------------------------------------------

[✔][✔] eostring& append( const eostring& str );

[✔][✔] eostring& append( const char* s );

--------------------------------------------------------------------------------

[ ][ ] eostring& operator+=( const eostring& str );

[ ][ ] eostring& operator+=( char ch );

[ ][ ] eostring& operator+=( const char* s );

[ ][ ] eostring& operator+=( std::initializer_list<char> ilist );

[ ][ ] template < class T > 
eostring& operator+=( const T& t );

--------------------------------------------------------------------------------

[ ][ ] int compare( const eostring& str ) const;

[ ][ ] int compare( const eostring& str ) const noexcept;

[ ][ ] int compare( size_t pos1, size_t count1, const eostring& str ) const;

[ ][ ] int compare( size_t pos1, size_t count1, const eostring& str, size_t pos2, size_t count2 ) const;

[ ][ ] int compare( size_t pos1, size_t count1, const eostring& str, size_t pos2, size_t count2 = npos ) const;

[ ][ ] int compare( const char* s ) const;

[ ][ ] int compare( size_t pos1, size_t count1, const char* s ) const;

[ ][ ] int compare( size_t pos1, size_t count1, const char* s, size_t count2 ) const;

[ ][ ] template < class T >
int compare( const T& t ) const noexcept(/* see below */);

[ ][ ] template < class T >
int compare( size_t pos1, size_t count1, const T& t ) const;

[ ][ ] template < class T >
int compare( size_t pos1, size_t count1, const T& t, size_t pos2, size_t count2 = npos) const;

--------------------------------------------------------------------------------

[ ][ ] eostring& replace( size_t pos, size_t count, const eostring& str );

[ ][ ] eostring& replace( const_iterator first, const_iterator last, const eostring& str );

[ ][ ] eostring& replace( size_t pos, size_t count, const eostring& str, size_t pos2, size_t count2 );

[ ][ ] eostring& replace( size_t pos, size_t count, const eostring& str, size_t pos2, size_t count2 = npos );

[ ][ ] template< class InputIt >
eostring& replace( const_iterator first, const_iterator last, InputIt first2, InputIt last2 );

[ ][ ] eostring& replace( size_t pos, size_t count, const char* cstr, size_t count2 );

[ ][ ] eostring& replace( const_iterator first, const_iterator last, const char* cstr, size_t count2 );

[ ][ ] eostring& replace( size_t pos, size_t count, const char* cstr );

[ ][ ] eostring& replace( const_iterator first, const_iterator last, const char* cstr );

[ ][ ] eostring& replace( size_t pos, size_t count, size_t count2, char ch );

[ ][ ] eostring& replace( const_iterator first, const_iterator last, size_t count2, char ch );

[ ][ ] eostring& replace( const_iterator first, const_iterator last, std::initializer_list<char> ilist );

[ ][ ] template < class T >
eostring& replace( size_t pos, size_t count, const T& t );

[ ][ ] template < class T >
eostring& replace( const_iterator first, const_iterator last, const T& t );

[ ][ ] template < class T >
eostring& replace( size_t pos, size_t count, const T& t, size_t pos2, size_t count2 = npos );

--------------------------------------------------------------------------------

[ ][ ] eostring substr( size_t pos = 0, size_t count = npos ) const;

--------------------------------------------------------------------------------

[ ][ ] size_t copy( char* dest, size_t count, size_t pos = 0) const;

--------------------------------------------------------------------------------

[ ][ ] void resize( size_t count );

[ ][ ] void resize( size_t count, char ch );

--------------------------------------------------------------------------------

[ ][ ] void swap( eostring& other );

[ ][ ] void swap( eostring& other ) noexcept(/* see below */);

--------------------------------------------------------------------------------
