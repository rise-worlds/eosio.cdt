cmake_minimum_required(VERSION 3.5)
project(eosio_wasm_sdk VERSION 0.0.0)

include(GNUInstallDirs)

if(NOT ${NO_WASM_COMPILER} STREQUAL "")
   string(TOLOWER ${NO_WASM_COMPILER} no_wasm_comp)
   if(NOT ${no_wasm_comp} STREQUAL "true")
      ### include eosio clang 7 as external project
      include(ClangExternalProject.txt)
   else(NOT ${no_wasm_comp} STREQUAL "true")
      add_custom_target(EosioClang)
   endif()
else(NOT ${NO_WASM_COMPILER} STREQUAL "")
   set(no_wasm_comp "false")
   include(ClangExternalProject.txt)
endif()
#include(ToolingExternalProject.txt)

add_subdirectory(external)

set(WASM_SDK_BUILD true)
set(SDK_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/eosio.wasmsdk)

configure_file(${CMAKE_SOURCE_DIR}/eosio.imports.in ${CMAKE_BINARY_DIR}/eosio.imports)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/modules")
include(EosioWasmToolchain)

add_subdirectory(libraries)

if ( ${no_wasm_comp} STREQUAL "false" )
   # install clang and llvm
   set(CLANG_BIN_DIR ${CMAKE_BINARY_DIR}/EosioClang-prefix/src/EosioClang-build/bin)
   install(FILES ${CLANG_BIN_DIR}/llvm-ranlib 
      DESTINATION ${SDK_INSTALL_PREFIX}/bin
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/llvm-ar 
      DESTINATION ${SDK_INSTALL_PREFIX}/bin 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/llvm-nm 
      DESTINATION ${SDK_INSTALL_PREFIX}/bin 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/llvm-objdump 
      DESTINATION ${SDK_INSTALL_PREFIX}/bin 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/llvm-readelf 
      DESTINATION ${SDK_INSTALL_PREFIX}/bin 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/opt
      DESTINATION ${SDK_INSTALL_PREFIX}/bin
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/llc
      DESTINATION ${SDK_INSTALL_PREFIX}/bin
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/lld
      DESTINATION ${SDK_INSTALL_PREFIX}/bin
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/llvm-strip
      DESTINATION ${SDK_INSTALL_PREFIX}/bin
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/clang-7 
      DESTINATION ${SDK_INSTALL_PREFIX}/bin
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/wasm-ld
      DESTINATION ${SDK_INSTALL_PREFIX}/bin
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

   # install cpp ld ranlib ar objdump and readelf
   install(FILES ${SDK_INSTALL_PREFIX}/bin/llvm-ranlib 
      DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME eosio.ranlib 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${SDK_INSTALL_PREFIX}/bin/llvm-ar 
      DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME eosio.ar 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${SDK_INSTALL_PREFIX}/bin/llvm-objdump 
      DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME eosio.objdump 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${SDK_INSTALL_PREFIX}/bin/llvm-readelf 
      DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME eosio.readelf 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

   install(FILES ${CLANG_BIN_DIR}/eosio.cpp 
      DESTINATION ${CMAKE_INSTALL_BINDIR} 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/eosio.ld 
      DESTINATION ${CMAKE_INSTALL_BINDIR} 
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/clang-7 
      DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME clang
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CLANG_BIN_DIR}/clang-7 
      DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME clang
      PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
   install(FILES ${CMAKE_BINARY_DIR}/../lib/LLVMEosioApply${CMAKE_SHARED_LIBRARY_SUFFIX}
      DESTINATION ${CMAKE_INSTALL_BINDIR})
endif()

# install examples
install(DIRECTORY examples DESTINATION "${SDK_INSTALL_PREFIX}")

install(EXPORT EosioLib DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)

set(INCLUDE_INSTALL_DIR ${SDK_INSTALL_PREFIX}/include)
include(CMakePackageConfigHelpers)
write_basic_package_version_file(EosioLibConfigVersion.cmake 
   COMPATIBILITY SameMajorVersion)

configure_package_config_file(${CMAKE_SOURCE_DIR}/modules/EosioLibConfig.cmake.in EosioLibConfig.cmake
   INSTALL_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/"
   PATH_VARS INCLUDE_INSTALL_DIR)

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/EosioLibConfigVersion.cmake
   DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/EosioLibConfig.cmake
   DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
install(FILES ${CMAKE_SOURCE_DIR}/modules/EosioWasmToolchain.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
install(FILES ${CMAKE_BINARY_DIR}/eosio.imports DESTINATION ${SDK_INSTALL_PREFIX})
