#include <eosiolib/eosio.hpp>
#include <eosiolib/string.hpp>
#include <string>

using namespace eosio;

CONTRACT rope_tests : public contract{
   public:
      using contract::contract;

      ACTION test1() {
         rope r("hello");
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";

        //r.c_str(buff);
        // eosio::print(r);
        // eosio_assert(false, "something");
      }

      ACTION test2() {
         std::string r("hello");
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";
         r += ", world";
         r += " please!";

        //r.c_str(buff);
         //eosio::print(r);
         //eosio_assert(false, "something");
      }

};

EOSIO_DISPATCH(rope_tests, (test1)(test2))
